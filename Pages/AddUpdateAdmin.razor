@page "/Admin/add"
@page "/Admin/update/{Id:int}"

@using System.Net.Http
@using System.Net.Http.Json
@using HelpDentsProyecto.Data.Models
@using HelpDentsProyecto.Data
@inject HttpClient http
@inject NavigationManager NavigationManager


<PageTitle>@(isUpdate ? $"Editar Admin[Id:{admin.Id}]" : "Agregar Administrador") </PageTitle>
<h1>@(isUpdate ? $"Editar Admin[Id:{admin.Id}]" : "Agregar Administrador")</h1>

<EditForm Model="@admin">
    <form class="container border" @onsubmit="Save">
        <div class="mb-2">
            <label class="form-label" for="name">Nombres</label>
            <InputText class="form-control" @bind-Value="@admin.Nombres" id="Nombres"></InputText>
        </div>
         <div class="mb-2">
            <label class="form-label" for="name">Apellidos</label>
            <InputText class="form-control" @bind-Value="@admin.Apellidos" id="Apellidos"></InputText>
        </div>
         <div class="mb-2">
            <label class="form-label" for="name">Correo</label>
            <InputText class="form-control" @bind-Value="@admin.Correo" id="Correo"></InputText>
        </div>
         <div class="mb-2">
            <label class="form-label" for="name">Contraseña</label>
            <InputText class="form-control" @bind-Value="@admin.Contraseña" id="Contraseña"></InputText>
        </div>
        <button type="submit" class="btn btn-primary">Guardar</button>
        <a class="btn btn-danger" href="/Admin">Cancelar</a>
    </form>
</EditForm>




@code {
    [Parameter]
    public int id { get; set; }
    public bool isUpdate { get; set; } = false;
    bool loading = true;
    AdminModel admin = new AdminModel();

    protected override async Task OnInitializedAsync()
    {
        isUpdate = id != 0;
        if (isUpdate)
        {
            var response = await http.GetFromJsonAsync<AdminModel>($"api/Administrador/{admin.Id}");
            if (response != null)
            {
                admin = response;
            }

        }
        loading = false;
    }

    protected async Task Save()
    {
        HttpResponseMessage? response;
        if (isUpdate)
        {
            response = await http.PutAsJsonAsync<AdminModel>($"api/Administrador/{id}", admin!);
        }
        else
        {
            response = await http.PostAsJsonAsync<AdminModel>("api/Administrador", admin!);
        }
        AdminModel? saved = response.Content.ReadFromJsonAsync<AdminModel>().Result;
            NavigationManager.NavigateTo("/Admin");
    }
}

