@page "/Asesor"
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage
@inject ProtectedSessionStorage SessionStorage
@inject NavigationManager NavigationManager

@using HelpDentsProyecto.Data
@using HelpDentsProyecto.Data.Models
@using System.Net.Http
@using System.Net.Http.Json
@inject HttpClient http

@if(sesion == false)
{
    
}
else
{
    <PageTitle>Asesor</PageTitle>
    <div class="tittle">
    <div class="tittle_content">
        <h1>Asesor</h1>
    </div>
    <div class="tittle_btn">
        <a href="/Asesor/add" class="btn btn-success">
        <i class="oi oi-plus"></i>
        &nbsp
        Agregar
        </a>
    </div>
</div>



@if (AsesorFor == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Id</th>
                <th> (Id) Usuario </th>
                <th>Costo</th>
                <th>Telefono</th>
                
                <th>Descripcion</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var RecorridoAsesor in AsesorFor.Reverse())
            {
                <tr>
                    <td>@RecorridoAsesor.Id</td>
                    <td> (@RecorridoAsesor.UsuarioIdUsuario) @RecorridoAsesor.Nombres @RecorridoAsesor.Apellidos </td>
                    <td>$@RecorridoAsesor.Costo</td>
                    <td>@RecorridoAsesor.Telefono</td>
                    
                    <td>@RecorridoAsesor.Descripcion</td>
                    <td>
                        <span class="icon">
                            <a href="/Asesor/update/@RecorridoAsesor.Id" class="oi oi-pencil" title="Editar"></a>
                        </span>
                        &nbsp
                        <span class="icon">
                            <a href="/Asesor/delete/@RecorridoAsesor.Id" class="oi oi-trash" title="Eliminar"></a>
                        </span>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
}



@code {
    private readonly string api = "api/Asesor/all";
    private IList<AsesorModel>? AsesorFor;
    private ResponseLogin? user;
    private bool sesion = false;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            try
            {

                var result = await SessionStorage.GetAsync<string>("Token");
                string Token = result.Success ? result.Value : "";

                if(Token == "")
                {
                    NavigationManager.NavigateTo("/Login");
                }

                var request = new HttpRequestMessage(HttpMethod.Get, $"api/Login/ValidateToken/{Token}");
                using var httpResponseInitial = await http.SendAsync(request);
                user = await httpResponseInitial.Content.ReadFromJsonAsync<ResponseLogin>();


                    if(user == null)
                    {
                        NavigationManager.NavigateTo("/Login");
                    }
                    else if(user.RolIdRol != 1)
                    {
                        NavigationManager.NavigateTo("/");
                    }
                    else
                    {
                        sesion = true;
                        AsesorFor = await http.GetFromJsonAsync<IList<AsesorModel>>(api);
                    }
                

                StateHasChanged();
                
            }
            catch(Exception ex)
            {
               
            }
        }
        
    }
}