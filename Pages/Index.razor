@page "/Index"
@using HelpDentsProyecto.Data
@using HelpDentsProyecto.Data.Models
@using System.Net.Http
@using System.Net.Http.Json
@inject HttpClient http
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage
@using System.Net.Http.Headers
@using System.Text.Json
@using System.Text
@inject ProtectedSessionStorage SessionStorage
@inject NavigationManager NavigationManager

@if(sesion == false)
{

}
else
{    
    <PageTitle>Home</PageTitle>
    <h1>Bienvenido Administrador</h1>
    <link rel="stylesheet" href="~/css/index.css" />
}


@code {
    private ResponseLogin? user;
    private bool sesion = false;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            try
            {

                var result = await SessionStorage.GetAsync<string>("Token");
                string Token = result.Success ? result.Value : "";

                if(Token == "")
                {
                    NavigationManager.NavigateTo("/Login");
                }

                var request = new HttpRequestMessage(HttpMethod.Get, $"api/Login/ValidateToken/{Token}");
                using var httpResponseInitial = await http.SendAsync(request);
                user = await httpResponseInitial.Content.ReadFromJsonAsync<ResponseLogin>();


                    if(user == null)
                    {
                        NavigationManager.NavigateTo("/Login");
                    }
                    else if(user.RolIdRol != 1)
                    {
                        NavigationManager.NavigateTo("/");
                    }
                    else
                    {
                        sesion = true;
                    }
                

               /* var request2 = new HttpRequestMessage(HttpMethod.Get, api2);
                TokenSend tokensend = new TokenSend();
                tokensend.Token = Token;
                request2.Headers.Add("Authorization", Token);
                request2.Content = new StringContent(JsonSerializer.Serialize(tokensend), Encoding.UTF8, "application/json");;
                using var httpResponse = await http.SendAsync(request2);
                UsuarioFor = await httpResponse.Content.ReadFromJsonAsync<IList<UsuarioModel>>(); */
                StateHasChanged();
            }
            catch(Exception ex)
            {
               
            }
        }
        
    }

   
}


