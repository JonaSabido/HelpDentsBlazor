@page "/AsesorTurno"

<PageTitle>Turnos de Asesores</PageTitle>

@using HelpDentsProyecto.Data
@using HelpDentsProyecto.Data.Models
@using System.Net.Http
@using System.Net.Http.Json
@inject HttpClient http

<div class="tittle">
    <div class="tittle_content">
        <h1>Turnos de Asesores</h1>
    </div>
    <div class="tittle_btn">
        <a href="/AsesorTurno/add" class="btn btn-success">
        <i class="oi oi-plus"></i>
        &nbsp
        Agregar
        </a>
    </div>
</div>

<p>This component demonstrates fetching data from a service.</p>

@if (AsesorTurnoFor == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Id</th>
                <th>(Id) Asesor</th>
                <th>(Id) Turno</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var RecorridoAsesorTurno in AsesorTurnoFor.Reverse())
            {
                <tr>
                    <td>@RecorridoAsesorTurno.Id</td>
                    @foreach(var RecorridoAsesor in AsesorFor)
                    {
                        if(@RecorridoAsesor.Id == @RecorridoAsesorTurno.Asesor_idAsesor)
                        {
                            <td>(@RecorridoAsesor.Id) @RecorridoAsesor.Nombres @RecorridoAsesor.Apellidos</td>
                        }
                    }
                    @foreach(var RecorridoTurno in TurnoFor)
                    {
                        if(@RecorridoTurno.Id == @RecorridoAsesorTurno.Turno_idTurno)
                        {
                            <td>(@RecorridoTurno.Id) @RecorridoTurno.Nombre</td>
                        }
                    }

                    <td>
                        <span class="icon">
                            <a href="/AsesorTurno/delete/@RecorridoAsesorTurno.Id" class="oi oi-trash" title="Eliminar"></a>
                        </span>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private readonly string api = $"api/AsesorTurno/all";
    private readonly string api2 = "api/Asesor/all";
    private readonly string api3 = "api/Turno/all";
    private IList<AsesorHasTurnoModel>? AsesorTurnoFor;
    private IList<AsesorModel>? AsesorFor;
    private IList<TurnoModel>? TurnoFor;

    protected override async Task OnInitializedAsync()
    {
        AsesorTurnoFor = await http.GetFromJsonAsync<IList<AsesorHasTurnoModel>>(api);
        AsesorFor = await http.GetFromJsonAsync<IList<AsesorModel>>(api2);
        TurnoFor = await http.GetFromJsonAsync<IList<TurnoModel>>(api3);
    }
}
