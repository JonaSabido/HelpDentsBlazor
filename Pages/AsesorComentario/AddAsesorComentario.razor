@page "/AsesorComentario/add"
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage
@inject ProtectedSessionStorage SessionStorage
@inject NavigationManager NavigationManager
@using System.Net.Http
@using System.Net.Http.Json
@using HelpDentsProyecto.Data.Models
@using HelpDentsProyecto.Data
@inject HttpClient http
@inject NavigationManager NavigationManager

@if(sesion == false)
{
    
}
else
{
    <PageTitle>Agregar Comentarios a Asesor </PageTitle>
<h1>Agregar Comentarios de Asesores</h1>



<EditForm Model="@ahe"> 
    <form class="container border" @onsubmit="Save">
        <div class="mb-2">
            <label class="form-label" for="name">Asesor Id</label>
            <input type="number" class="form-control" @bind-value="@ahe.Asesor_idAsesor" id="idAsesor" required></input>
        </div>
        <div class="mb-2">
            <label class="form-label" for="name">Comentario Id</label>
            <input type="number" class="form-control" @bind-value="@ahe.Comentario_IdComentario" id="idComentario" required></input>
        </div>
        <button type="submit" class="btn btn-primary">Guardar</button>
        <a class="btn btn-danger" href="/AsesorComentario">Cancelar</a>
    </form> 
</EditForm>
}









@code {
   
    AsesorHasComentarioModel ahe = new AsesorHasComentarioModel();
    private ResponseLogin? user;
    private bool sesion = false;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            try
            {

                var result = await SessionStorage.GetAsync<string>("Token");
                string Token = result.Success ? result.Value : "";

                if(Token == "")
                {
                    NavigationManager.NavigateTo("/Login");
                }

                var request = new HttpRequestMessage(HttpMethod.Get, $"api/Login/ValidateToken/{Token}");
                using var httpResponseInitial = await http.SendAsync(request);
                user = await httpResponseInitial.Content.ReadFromJsonAsync<ResponseLogin>();


                    if(user == null)
                    {
                        NavigationManager.NavigateTo("/Login");
                    }
                    else if(user.RolIdRol != 1)
                    {
                        NavigationManager.NavigateTo("/");
                    }
                    else
                    {
                        sesion = true;
                        
                    }
                

                StateHasChanged();
                
            }
            catch(Exception ex)
            {
               
            }
        }
        
    }

    protected async Task Save()
    {
        HttpResponseMessage? response;
       
        response = await http.PostAsJsonAsync<AsesorHasComentarioModel>("api/AsesorComentario", ahe!);
        
        NavigationManager.NavigateTo("/AsesorComentario");
        

    }



}

