@page "/Especialidad"
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage
@inject ProtectedSessionStorage SessionStorage
@inject NavigationManager NavigationManager
@using HelpDentsProyecto.Data
@using HelpDentsProyecto.Data.Models
@using System.Net.Http
@using System.Net.Http.Json
@inject HttpClient http

@if(sesion == false)
{
    
}
else
{
            <PageTitle>Especialidad</PageTitle>
            <div class="tittle">
            <div class="tittle_content">
                <h1>Especialidad</h1>
            </div>
            <div class="tittle_btn">
                <a href="/Especialidad/add" class="btn btn-success">
                <i class="oi oi-plus"></i>
                &nbsp
                Agregar
                </a>
            </div>
        </div>

        <p>This component demonstrates fetching data from a service.</p>

        @if (EspecialidadFor == null)
        {
            <p><em>Loading...</em></p>
        }
        else
        {
            <table class="table">
                <thead>
                    <tr>
                        <th>Id</th>
                        <th>Especialidad</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var RecorridoEspecial in EspecialidadFor.Reverse())
                    {
                        <tr>
                            <td>@RecorridoEspecial.Id</td>
                            <td>@RecorridoEspecial.Nombre</td>
                            <td>
                                <span class="icon">
                                    <a href="/Especialidad/update/@RecorridoEspecial.Id" class="oi oi-pencil" title="Editar"></a>
                                </span>
                                &nbsp
                                <span class="icon">
                                    <a href="/Especialidad/delete/@RecorridoEspecial.Id" class="oi oi-trash" title="Eliminar"></a>
                                </span>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        }
}



@code {
    private readonly string api = "api/Especialidad/all";
    private IList<EspecialidadModel>? EspecialidadFor;
    private ResponseLogin? user;
    private bool sesion = false;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            try
            {

                var result = await SessionStorage.GetAsync<string>("Token");
                string Token = result.Success ? result.Value : "";

                if(Token == "")
                {
                    NavigationManager.NavigateTo("/Login");
                }

                var request = new HttpRequestMessage(HttpMethod.Get, $"api/Login/ValidateToken/{Token}");
                using var httpResponseInitial = await http.SendAsync(request);
                user = await httpResponseInitial.Content.ReadFromJsonAsync<ResponseLogin>();


                    if(user == null)
                    {
                        NavigationManager.NavigateTo("/Login");
                    }
                    else if(user.RolIdRol != 1)
                    {
                        NavigationManager.NavigateTo("/");
                    }
                    else
                    {
                        sesion = true;
                        EspecialidadFor = await http.GetFromJsonAsync<IList<EspecialidadModel>>(api);
                        
                    }
                

                StateHasChanged();
                
            }
            catch(Exception ex)
            {
               
            }
        }
        
    }
}