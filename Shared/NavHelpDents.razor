@inherits LayoutComponentBase
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage
@inject ProtectedSessionStorage SessionStorage
@inject NavigationManager NavigationManager

@using HelpDentsProyecto.Data.Models
@using HelpDentsProyecto.Data

<nav id="nav" class="navbar">
    <div>
        <a href="/" id="logo">

            <img src="/images/logo.png" id="img-logo" />

        </a>
    </div>

    <div class="input-wrapper">
        <input type="search" placeholder="Buscar" id="inputSearch" @bind-value="@user.Nombres" />
        <a href="#" @onclick="Send">
            <svg xmlns="http://www.w3.org/2000/svg" class="input-icon" viewBox="0 0 20 20" fill="currentColor" id="btnSearch">
                <path fill-rule="evenodd" d="M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z" clip-rule="evenodd" />
            </svg>
        </a>
    </div>

    <div>
        @if (id == 0)
        {
            <a href="/Registro" id="botonRegistro"> Registrarse </a>
            <a href="/Login" id="botonLogin"> Iniciar Sesión </a>
        }
        else
        {
            if (rol != 0)
            {
                if (rol == 1)
                {
                    <a href="/Index">
                        <i class="oi oi-home"></i>
                    </a>
                }

                if (rol == 2)
                {
                    <a href="/Principal">
                        <i class="oi oi-home"></i>
                    </a>
                }
                if (rol == 3)
                {
                    <a href="/Principal">
                        <i class="oi oi-home"></i>
                    </a>
                }

            }

            <a @onclick="LogOut" id="botonLogin" href="/"> Cerrar Sesión </a>
        }



    </div>

</nav>



@Body

@code {
    UsuarioModel user = new UsuarioModel();
    int id;
    int rol = 0;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            try
            {
                var result = await SessionStorage.GetAsync<int>("Id");
                id = result.Success ? result.Value : 0;

                var result2 = await SessionStorage.GetAsync<int>("Rol");
                rol = result2.Success ? result2.Value : 0;
                StateHasChanged();
            }
            catch (Exception ex)
            {
                id = 0;
            }
        }

    }

    protected async Task LogOut()
    {
        await SessionStorage.DeleteAsync("Id");
        await SessionStorage.DeleteAsync("Token");
        await SessionStorage.DeleteAsync("Rol");
        await SessionStorage.DeleteAsync("Correo");
        id = 0;
        NavigationManager.NavigateTo("/");
        await OnInitializedAsync();
    }

    protected async Task Send()
    {
        NavigationManager.NavigateTo($"/Asesores/Search/{user.Nombres}");
    }
}